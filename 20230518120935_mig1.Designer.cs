// <auto-generated />
using System;
using CompanyWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompanyWebApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230518120935_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompanyWebApp.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Dep_Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Supervisor_Id")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("empRole")
                        .HasColumnType("int");

                    b.Property<int>("empStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Dep_Id");

                    b.HasIndex("Supervisor_Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CompanyWebApp.Models.comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Emp_Id")
                        .HasColumnType("int");

                    b.Property<int>("Task_Id")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Emp_Id");

                    b.HasIndex("Task_Id");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("CompanyWebApp.Models.department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Manager_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("CompanyWebApp.Models.task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Employee_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("taskDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("taskStatues")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Employee_Id");

                    b.ToTable("tasks");
                });

            modelBuilder.Entity("CompanyWebApp.Models.Employee", b =>
                {
                    b.HasOne("CompanyWebApp.Models.department", "Dep")
                        .WithMany("Employees")
                        .HasForeignKey("Dep_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyWebApp.Models.Employee", "Supervisor")
                        .WithMany("Employees")
                        .HasForeignKey("Supervisor_Id");

                    b.Navigation("Dep");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("CompanyWebApp.Models.comment", b =>
                {
                    b.HasOne("CompanyWebApp.Models.Employee", "employee")
                        .WithMany("Comments")
                        .HasForeignKey("Emp_Id");

                    b.HasOne("CompanyWebApp.Models.task", "Task")
                        .WithMany("Comments")
                        .HasForeignKey("Task_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("CompanyWebApp.Models.task", b =>
                {
                    b.HasOne("CompanyWebApp.Models.Employee", "employee")
                        .WithMany("Tasks")
                        .HasForeignKey("Employee_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("CompanyWebApp.Models.Employee", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Employees");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("CompanyWebApp.Models.department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CompanyWebApp.Models.task", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
